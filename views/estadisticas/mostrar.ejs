<%- include("../templates/encabezado") %>
<%- include("../templates/menu") %>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="/socket.io/socket.io.js"></script> 

<div class="container mt-5">
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h1 class="fw-bold">Ingresos Mensuales</h1>
            <select class="form-control mb-3" name="anioGrafica" id="anioGrafica" style="width: 200px !important;"></select>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="table-responsive col-md-3">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Mes</th>
                                <th>Ingresos</th>
                            </tr>
                        </thead>
                        <% 
                        const monthNames = [
                            'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 
                            'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'
                        ];
                        meses.sort((a, b) => a.mes - b.mes);
                        %>
                        <tbody id="tBodyMeses">
                            <% meses.forEach((mes) => { %>
                                <tr>
                                    <td><%= monthNames[mes.mes - 1] %></td>
                                    <td>$ <%= mes.sumaGanancia %></td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
                <div class="col-md-9">
                    <canvas id="mesesChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container mt-5">
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h1 class="fw-bold">Ingresos por Año</h1>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="table-responsive col-md-3">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Año</th>
                                <th>Suma Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% Object.keys(sumasAnuales).forEach(anio => { %>
                                <tr>
                                    <td><%= anio %></td>
                                    <td>$ <%= sumasAnuales[anio].toFixed(2) %></td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
                <div class="col-md-9">
                    <canvas id="anioChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container mt-5 mb-5">
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h1 class="fw-bold">Conteo Anual</h1>
            <select class="form-control mb-3" id="anioTablas" style="width: 200px !important;"></select>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="table-responsive col-md-6">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Cliente</th>
                                <th>Compras Totales</th>
                            </tr>
                        </thead>
                        <tbody id="tBodyClientes">
                            <% clientesOrdenados.forEach(cliente => { %>
                                <tr>
                                    <td><%= cliente[0] %></td>
                                    <td><%= cliente[1].contador %></td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
                <div class="table-responsive col-md-6">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Botellas</th>
                                <th>No. Vendidas</th>
                            </tr>
                        </thead>
                        <tbody id="tBodyProductos">
                            <% productosOrdenados.forEach(producto => { %>
                                <tr>
                                    <td><%= producto[0] %></td>
                                    <td><%= producto[1] %></td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<%- include("../templates/pie") %>

<script>
    let chartMeses;
    const monthNames = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];

    document.addEventListener('DOMContentLoaded', function () {
        const selectAnioGrafica = document.getElementById("anioGrafica");
        const selectAnioTablas = document.getElementById("anioTablas");
        const anioActual = new Date().getFullYear();

        function agregarOpcion(select, valor, texto) {
            const option = document.createElement("option");
            option.value = valor;
            option.textContent = texto;
            select.appendChild(option);
        }

        for (let i = 2023; i <= anioActual + 1; i++) {
            agregarOpcion(selectAnioGrafica, i, i);
            agregarOpcion(selectAnioTablas, i, i);
        }

        selectAnioGrafica.value = anioActual;
        selectAnioTablas.value = anioActual;

        const meses = <%- JSON.stringify(meses) %>;
        generarGraficasMensuales(meses, monthNames);
        generarGraficasAnuales();

        const socket = io();
        socket.on('actualizarEstadistica', function (data) {
            actualizarTabla(data);
            generarGraficasMensuales(data, monthNames);
        });

        socket.on('actualizarTablas', function (data) {
            var tBodyClientes = document.getElementById('tBodyClientes');
            tBodyClientes.innerHTML = '';
            data.listaClientes.forEach(cliente => {
                var row = document.createElement('tr');
                row.innerHTML = `
                    <td>${cliente ? cliente[0] : ""}</td>                    
                    <td>${cliente ? cliente[1].contador : ""}</td>
                `;
                tBodyClientes.appendChild(row);
            });
            var tBodyProductos = document.getElementById('tBodyProductos');
            tBodyProductos.innerHTML = '';
            data.listaProductos.forEach(producto => {
                var row = document.createElement('tr');
                row.innerHTML = `
                    <td>${producto ? producto[0] : ""}</td>                    
                    <td>${producto ? producto[1] : ""}</td>
                `;
                tBodyProductos.appendChild(row);
            });
        });


        selectAnioGrafica.addEventListener('change', function() {
            const anioSeleccionado = selectAnioGrafica.value;
            socket.emit('cambiarAnio', anioSeleccionado);
        });

        selectAnioTablas.addEventListener('change', function() {
            const anioSeleccionado = selectAnioTablas.value;
            socket.emit('cambiarAnioTabla', anioSeleccionado);
        });

    }, { once: true });

    function actualizarTabla(data) {
        data.sort((a, b) => a.mes - b.mes);
        var tbody = document.getElementById('tBodyMeses');
        tbody.innerHTML = '';
        data.forEach(mes => {
            var row = document.createElement('tr');
            row.innerHTML = `
                <td>${mes && mes.mes ? monthNames[mes.mes - 1] : ""}</td>                    
                <td>${mes && mes.sumaGanancia ? mes.sumaGanancia.toFixed(2) : ""}</td>
            `;
            tbody.appendChild(row);
        });
    }

    function generarGraficasMensuales(data, monthNames) {
        if (chartMeses) {
            chartMeses.destroy();
        }
        const labels = data.map(mes => monthNames[mes.mes - 1]);
        const datos = data.map(mes => mes.sumaGanancia);
        const ctx = document.getElementById('mesesChart').getContext('2d');
        
        chartMeses = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Ingresos',
                    data: datos,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }

    function generarGraficasAnuales() {
        const sumasAnuales = <%- JSON.stringify(sumasAnuales) %>;
        const labels = Object.keys(sumasAnuales);
        const data = Object.values(sumasAnuales);
        const ctx = document.getElementById('anioChart').getContext('2d');
        
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Suma Total de Ganancias por Año',
                    data: data,
                    backgroundColor: 'rgba(153, 102, 255, 0.2)',
                    borderColor: 'rgba(153, 102, 255, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }
</script>
